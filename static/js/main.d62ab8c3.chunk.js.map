{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","sortType","NONE","state","setState","sort","prevState","goods","visibleGoods","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,iEAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAA0BC,mBAAyB,CACjDC,YAAY,EACZC,SAAUL,EAASM,OAFrB,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAO,SAACJ,GACZG,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPL,iBAkBEM,EAlDR,SAA2BA,EAA3B,GAC6C,IAAzCN,EAAwC,EAAxCA,SAAUD,EAA8B,EAA9BA,WACNQ,EAAY,YAAOD,GAkBzB,OAhBAC,EAAaH,MAAK,SAACI,EAAeC,GAChC,OAAIT,IAAaL,EAASe,SACjBF,EAAMG,cAAcF,GAGzBT,IAAaL,EAASiB,OACjBJ,EAAMK,OAASJ,EAAMI,OAGvB,KAGLd,GACFQ,EAAaO,UAGRP,EA8BOQ,CAAkBnB,EAAiBM,GAEjD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPd,EAAMF,WAAaL,EAASe,SAAW,WAAa,IAEtDQ,QAAS,kBAAMd,EAAKT,EAASe,WAL/B,iCAUA,wBACEO,KAAK,SACLD,UAAS,4BACPd,EAAMF,WAAaL,EAASiB,OAAS,WAAa,IAEpDM,QAAS,kBAAMd,EAAKT,EAASiB,SAL/B,4BAUA,wBACEK,KAAK,SACLD,UAAS,4BACNd,EAAMH,WAA0B,GAAb,YAEtBmB,QA5CQ,WACdf,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPN,YAAaM,EAAUN,iBAoCrB,sBASEG,EAAMF,WAAaL,EAASM,MAAQC,EAAMH,aAC1C,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QA7CI,WACZf,EAAS,CACPJ,YAAY,EACZC,SAAUL,EAASM,QAuCf,sBAUJ,6BACGK,EAAMa,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC1HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d62ab8c3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType;\n  isReversed: boolean;\n}\n\nfunction getReorderedGoods(goods: string[],\n  { sortType, isReversed }: ReorderOptions) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1: string, good2: string): number => {\n    if (sortType === SortType.ALPHABET) {\n      return good1.localeCompare(good2);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return good1.length - good2.length;\n    }\n\n    return 0;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [state, setState] = useState<ReorderOptions>({\n    isReversed: false,\n    sortType: SortType.NONE,\n  });\n\n  const sort = (sortType: SortType) => {\n    setState((prevState) => ({\n      ...prevState,\n      sortType,\n    }));\n  };\n\n  const reverse = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  const reset = () => {\n    setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, state);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            state.sortType !== SortType.ALPHABET ? 'is-light' : ''\n          }`}\n          onClick={() => sort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            state.sortType !== SortType.LENGTH ? 'is-light' : ''\n          }`}\n          onClick={() => sort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${\n            !state.isReversed ? 'is-light' : ''\n          }`}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n        {(state.sortType !== SortType.NONE || state.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}